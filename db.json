{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0},{"_id":"source/images/head.jpg","path":"images/head.jpg","modified":0},{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":0},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":0},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":0},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":0},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":0},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":0},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":0},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":0},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":0},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":0},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":0},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":0},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":0},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":0},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0}],"Cache":[{"_id":"source/CNAME","shasum":"c25ce0973fefc310728131a54947967fea039dd4","modified":1438093661000},{"_id":"source/_posts/15-7-29.md","shasum":"9a9547379219bdacea5c0cb2fe75a35d9629a265","modified":1438182852000},{"_id":"source/_posts/15-7-31.md","shasum":"5c21e5383e58f3efdbe2992db7b3300b91cdb14d","modified":1438358699000},{"_id":"source/_posts/hjjnew.md","shasum":"dcb66f067148c979d497be6cd81090d5c9a18fea","modified":1438090901000},{"_id":"source/_posts/Runtime.md","shasum":"b13f1a037283f392d0029795942efb829b453f6f","modified":1438358223000},{"_id":"source/_posts/hello-world.md","shasum":"774b507901d9b17991ace2a70263b6dd6d11999a","modified":1437984420000},{"_id":"source/images/head.jpg","shasum":"63481f42682d0f95e1b7169f8184f2080eaa8420","modified":1438058347000},{"_id":"themes/yilia/README.md","shasum":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","shasum":"082504c9fd8600306d4ca55f03e3cbb0ddd99dd7","modified":1438015532000},{"_id":"themes/yilia/_config.yml","shasum":"22979e8594760acd6ea9a56d641e2dc8c304ef04","modified":1438361427000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","shasum":"8dfb6d68aa8a0661d26c32ce1ce1f45815364c3a","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/archive.ejs","shasum":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/article.ejs","shasum":"ef8dd558f908f293c34123c0b7ff879d2fd0c09f","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/footer.ejs","shasum":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","shasum":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/head.ejs","shasum":"963c106412a3ab142871976978ecc9884aeca17a","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/header.ejs","shasum":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","shasum":"70a9951e4e2d30aabba88e75c3fa54b9235ce6a6","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","shasum":"54fab4d3d64cb937d6baec7324ffabf9f202b883","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","shasum":"cd0af87ee781ac9c2b0e6a2a05b063d4bd497d9c","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","shasum":"d4f0e36f9a2167e91082dbd7d52425a06d2bebbf","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","shasum":"c0c988334e857a77ba455a056dfa21809e7e76a5","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","shasum":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","shasum":"d19dee2082528e1844bed3aa4e4bd59f15fd7a7a","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","shasum":"da39b4ba0c0ce4e1932fd45c5aee10e8aca41f28","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","shasum":"78612cfc091d7d861a70455a0dc8c3036e460879","modified":1438015532000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1438015532000},{"_id":"themes/yilia/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1438015532000},{"_id":"themes/yilia/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1438015532000},{"_id":"themes/yilia/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1438015532000},{"_id":"themes/yilia/layout/layout.ejs","shasum":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1438015532000},{"_id":"themes/yilia/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1438015532000},{"_id":"themes/yilia/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1438015532000},{"_id":"themes/yilia/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1438015532000},{"_id":"themes/yilia/package.json","shasum":"00357ef6f24eb049074da81809e98f973f528cca","modified":1438015532000},{"_id":"themes/yilia/source/css/_extend.styl","shasum":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/archive.styl","shasum":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/article.styl","shasum":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/footer.styl","shasum":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/header.styl","shasum":"67e59feb18eee6026717cb440d86ab9551782628","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","shasum":"8cadf8437ce6f372802d3d28617a1ab97e7c818e","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","shasum":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/main.styl","shasum":"4268f759920106a576c6037264076b36018ff73b","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","shasum":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","shasum":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/page.styl","shasum":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/scroll.styl","shasum":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/share.styl","shasum":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","shasum":"af0115de5c6455f899a2e09225b50224982c039d","modified":1438015532000},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","shasum":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1438015532000},{"_id":"themes/yilia/source/css/_util/grid.styl","shasum":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1438015532000},{"_id":"themes/yilia/source/css/_util/mixin.styl","shasum":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1438015532000},{"_id":"themes/yilia/source/css/_variables.styl","shasum":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1438015532000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1438015532000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1438015532000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","shasum":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1438015532000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1438015532000},{"_id":"themes/yilia/source/css/style.styl","shasum":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","shasum":"a82597493d75ea989ca586e09173cff332efe41e","modified":1438015532000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1438015532000},{"_id":"themes/yilia/source/img/coderwall.png","shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1438015532000},{"_id":"themes/yilia/source/img/delicious.png","shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1438015532000},{"_id":"themes/yilia/source/img/douban.png","shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1438015532000},{"_id":"themes/yilia/source/img/facebook.png","shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1438015532000},{"_id":"themes/yilia/source/img/github.png","shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1438015532000},{"_id":"themes/yilia/source/img/google.png","shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1438015532000},{"_id":"themes/yilia/source/img/img-err.png","shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1438015532000},{"_id":"themes/yilia/source/img/img-loading.png","shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1438015532000},{"_id":"themes/yilia/source/img/linkedin.png","shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1438015532000},{"_id":"themes/yilia/source/img/mail.png","shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1438015532000},{"_id":"themes/yilia/source/img/pinboard.png","shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1438015532000},{"_id":"themes/yilia/source/img/pinterest.png","shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1438015532000},{"_id":"themes/yilia/source/img/rss.png","shasum":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1438015532000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1438015532000},{"_id":"themes/yilia/source/img/stackoverflow.png","shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1438015532000},{"_id":"themes/yilia/source/img/twitter.png","shasum":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1438015532000},{"_id":"themes/yilia/source/img/weibo.png","shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1438015532000},{"_id":"themes/yilia/source/img/zhihu.png","shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1438015532000},{"_id":"themes/yilia/source/js/instagram.js","shasum":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1438015532000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1438015532000},{"_id":"themes/yilia/source/js/main.js","shasum":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1438015532000},{"_id":"themes/yilia/source/js/mobile.js","shasum":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1438015532000},{"_id":"themes/yilia/source/js/pc.js","shasum":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1438015532000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","shasum":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1438015532000},{"_id":"public/CNAME","modified":1438361441079,"shasum":"c25ce0973fefc310728131a54947967fea039dd4"},{"_id":"public/images/head.jpg","modified":1438361441085,"shasum":"63481f42682d0f95e1b7169f8184f2080eaa8420"},{"_id":"public/js/pc.js","modified":1438361441094,"shasum":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10"},{"_id":"public/js/mobile.js","modified":1438361441098,"shasum":"b68cc01d24e80973c48205f551da87f3f3427644"},{"_id":"public/js/main.js","modified":1438361441101,"shasum":"0640b68a76fab3c693b3cd1e4d04d14be1e53940"},{"_id":"public/js/jquery.lazyload.js","modified":1438361441105,"shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799"},{"_id":"public/js/instagram.js","modified":1438361441108,"shasum":"f19adbcc0dac33536bc6660598059048ec901882"},{"_id":"public/img/zhihu.png","modified":1438361441110,"shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d"},{"_id":"public/img/weibo.png","modified":1438361441113,"shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b"},{"_id":"public/img/twitter.png","modified":1438361441115,"shasum":"14dbb8e62d056525253bc0de13acd1723da7a934"},{"_id":"public/img/stackoverflow.png","modified":1438361441118,"shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2"},{"_id":"public/img/scrollbar_arrow.png","modified":1438361441124,"shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0"},{"_id":"public/img/rss.png","modified":1438361441129,"shasum":"430fd47340e75214c081abd05cd7410cf7c71b86"},{"_id":"public/img/pinterest.png","modified":1438361441133,"shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630"},{"_id":"public/img/pinboard.png","modified":1438361441135,"shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0"},{"_id":"public/img/mail.png","modified":1438361441148,"shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7"},{"_id":"public/img/linkedin.png","modified":1438361441150,"shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c"},{"_id":"public/img/img-loading.png","modified":1438361441154,"shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031"},{"_id":"public/img/img-err.png","modified":1438361441156,"shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b"},{"_id":"public/img/google.png","modified":1438361441158,"shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d"},{"_id":"public/img/github.png","modified":1438361441177,"shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d"},{"_id":"public/img/facebook.png","modified":1438361441181,"shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54"},{"_id":"public/img/douban.png","modified":1438361441183,"shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e"},{"_id":"public/img/delicious.png","modified":1438361441186,"shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd"},{"_id":"public/img/coderwall.png","modified":1438361441188,"shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1438361441192,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1438361441194,"shasum":"a82597493d75ea989ca586e09173cff332efe41e"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1438361441197,"shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1438361441198,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1438361441200,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1438361441203,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1438361441204,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1438361441206,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1438361441210,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1438361441214,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1438361441219,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1438361441222,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1438361441224,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1438361441226,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1438361441228,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1438361442437,"shasum":"e56554c624d9d49e9429eeeb9222488f8df634ec"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1438361442925,"shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1438361442927,"shasum":"1480b8101b02da9bc4c60341b5e185e63e585064"},{"_id":"public/css/fonts/fontawesome-webfont.svgz","modified":1438361442929,"shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1438361442932,"shasum":"ba13657479b46daecb6336bfe376f84cef3ae58b"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1438361442934,"shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6"},{"_id":"public/2015/08/01/15-7-31/index.html","modified":1438361443000,"shasum":"d8fd13294d9065de0e4acd6c5047ad1a7d6c403a"},{"_id":"public/2015/07/31/Runtime/index.html","modified":1438361443014,"shasum":"7a9d8c0dc1f40f7cf6da3ca585ae0f73cc17db2e"},{"_id":"public/2015/07/29/15-7-29/index.html","modified":1438361443031,"shasum":"606327318a50a4e290105258a05a2a994074860b"},{"_id":"public/2015/07/27/hjjnew/index.html","modified":1438361443051,"shasum":"5101d3f09bb7ddfb487696d669834fdbac2aec1d"},{"_id":"public/2015/07/27/hello-world/index.html","modified":1438361443060,"shasum":"c33b7a6f40d171c7158e5b9bdb93591f92efce33"},{"_id":"public/tags/Swift/index.html","modified":1438361443072,"shasum":"29ff1d825f893d507882e938f306f33bf9f5d95a"},{"_id":"public/tags/我/index.html","modified":1438361443086,"shasum":"a9555412e24d658b80e51a0a42ed0afd191c558b"},{"_id":"public/tags/随笔/index.html","modified":1438361443096,"shasum":"c987571240bbabb212b9e9d2299b2433b6a68d6b"},{"_id":"public/tags/iOS/index.html","modified":1438361443112,"shasum":"63368af79d968c51f1eee685e2a2c3fbf49738a3"},{"_id":"public/archives/index.html","modified":1438361443136,"shasum":"cf15c6969af5375947d152b04309c5d0f67f68ba"},{"_id":"public/archives/2015/index.html","modified":1438361443154,"shasum":"e3086e2e4b76971ab92439a060855c0a2c89d3e7"},{"_id":"public/archives/2015/07/index.html","modified":1438361443169,"shasum":"4d06586e53b72794df2be04dd27ed2b44a715fb5"},{"_id":"public/archives/2015/08/index.html","modified":1438361443176,"shasum":"a1d7fc1d9f10a364fb314f5a89e50d5cebf91710"},{"_id":"public/index.html","modified":1438361443196,"shasum":"1b081374f7e937c337314324dab2fd5496e8ef07"},{"_id":"public/categories/Swift/index.html","modified":1438361443204,"shasum":"b2e09a39d748eb0ec4f3ad81f9e19818e14b4902"},{"_id":"public/categories/iOS/index.html","modified":1438361443215,"shasum":"778eafe5333fff5be9c9798e1e2338e0026a3ddb"}],"Category":[{"name":"Swift","_id":"cicrv9hra0001a6c6pwmi82ra"},{"name":"iOS","_id":"cicrv9hs1000ba6c6irdsxrfs"}],"Data":[],"Page":[],"Post":[{"title":"IOS网络操作-使用Alamofire和ObjectMapper处理JSON转对象","date":"2015-07-27T08:57:32.000Z","_content":"Alamofire是一个使用Swift语言写的一个网络库，操作很简单，结合ObjectMapper、AlamofireObjectMapper，可以轻松的将JSON数据转换为对象类型！\nAlamofire：https://github.com/Alamofire/Alamofire\nObjectMapper：https://github.com/Hearst-DD/ObjectMapper\nALamoObjectmapper：https://github.com/tristanhimmelman/AlamofireObjectMapper\n\n假设有个地址返回如下JSON数据：\n## 代码块\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n{\n    \"meta\":\n    {\n        \"total\": \"16868\",\n        \"time\": \"0.435\",\n        \"limit\": \"10\",\n        \"offset\": 0,\n        \"currency\": \"CNY\",\n        \"symbol\": \"¥\"\n    },\n    \"products\": [\n    {\n        \"time_updated\": \"1432808931\",\n        \"commission\": \"363.42\",\n        \"price\": \"6,056.92\",\n        \"sku\": \"517569\",\n        \"upc\": \"\",\n        \"pweight\": null,\n        \"product_id\": \"82808bcd27eeb65dd15740aee40ec07c\",\n        \"product_image\": \"http://images.rewardstyle.com/img?v=1.3&p=82808bcd27eeb65dd15740aee40ec07c\",\n        \"product_type\": \"1\",\n        \"product_name\": \"Cape-back crepe and chiffon mini dress\",\n        \"advertiser\": \"NET-A-PORTER UK\",\n        \"designer\": \"Gareth Pugh\",\n        \"category\": \"WOMEN->Clothing->Dresses\"\n    },\n    {\n        \"time_updated\": \"1432808931\",\n        \"commission\": \"1,359.23\",\n        \"price\": \"22,653.85\",\n        \"sku\": \"549499\",\n        \"upc\": \"\",\n        \"pweight\": null,\n        \"product_id\": \"e147fbbf30c65538b367f3a6ab539252\",\n        \"product_image\": \"http://images.rewardstyle.com/img?v=1.3&p=e147fbbf30c65538b367f3a6ab539252\",\n        \"product_type\": \"1\",\n        \"product_name\": \"Woven suede tote\",\n        \"advertiser\": \"NET-A-PORTER UK\",\n        \"designer\": \"Loewe\",\n        \"category\": \"WOMEN->Bags->Tote\"\n    }\n                 ]\n}\n\n{% endcodeblock %}\n\n使用对象的概念来解读这段JSON数据，它包含Meta和Product：Meta是一个对象，Products是一个数组类型，包含了多个Product对象。\n我们首先使用ObjectMapper库定义的规则，来写一个实体类。\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\nclass Meta : Mappable{\n    var total:String?\n    var time:Double?\n    var limit:String?\n    var offset:String?\n    var currency:String?\n    var symbol:String?\n    init(){}\n    required init?(_ map: Map){\n        mapping(map)\n    }\n    func mapping(map: Map) {\n        total <- map[\"total\"]\n        time <- map[\"time\"]\n        limit <- map[\"limit\"]\n        offset <- map[\"offset\"]\n        currency <- map[\"currency\"]\n        symbol <- map[\"symbol\"]\n    }\n}\n\n\nclass Product : Mappable{\n    \n    var time_updated:String?\n    var commission:String?\n    var price:String?\n    var sku:String?\n    var product_id:String?\n    var product_image:String?\n    var product_name:String?\n    var advertiser:String?\n    var designer:String?\n    var category:String?\n    init(){}\n    \n    required init?(_ map: Map) {\n        mapping(map)\n    }\n    \n    func mapping(map: Map) {\n        time_updated <- map[\"prtime_updated\"]\n        commission <- map[\"age\"]\n        price <- map[\"price\"]\n        sku <- map[\"sku\"]\n        product_id <- map[\"product_id\"]\n        product_image <- map[\"product_image\"]\n        product_name <- map[\"product_name\"]\n        advertiser <- map[\"advertiser\"]\n        designer <- map[\"designer\"]\n        category <- map[\"category\"]\n    }\n}\n{% endcodeblock %}\n\n每个实体类都实现了Mappable协议。这仅仅是JSON数据中的两个对象，现在我们要再声明下整个JSON数据的对象定义，它将作为顶层包含着Meta类和Product类：\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n\nclass ProductResponse:Mappable{\n    var meta:Meta?\n    var products:[Product]?\n    \n    init(){}\n    required init?(_ map: Map) {\n        mapping(map)\n    }\n    func mapping(map: Map) {\n        meta <- map[\"meta\"]\n        products <- map[\"products\"]\n    }\n}\n\n{% endcodeblock %}\n\n接下来，就可以使用Alamofire来操作了。这时候，可以使用AlamofireObjectMapper库，它使用extension扩展了Alamofire的response方法：\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n\nAlamofire.request(Method.GET, \"请求的地址\", parameters: nil, encoding: ParameterEncoding.URL).responseObject { (response:ProductResponse?, error:NSError?) -> Void in\n    if let products = response?.products{\n        for p in products{\n            println(p.product_name)\n        }\n    }\n}// end request\n{% endcodeblock %}\n\n","source":"_posts/hjjnew.md","raw":"title: IOS网络操作-使用Alamofire和ObjectMapper处理JSON转对象\ndate: 2015-07-27 16:57:32\ntags:\n- Swift\n- 我\n- 随笔\ncategories:\n- Swift\n\n---\nAlamofire是一个使用Swift语言写的一个网络库，操作很简单，结合ObjectMapper、AlamofireObjectMapper，可以轻松的将JSON数据转换为对象类型！\nAlamofire：https://github.com/Alamofire/Alamofire\nObjectMapper：https://github.com/Hearst-DD/ObjectMapper\nALamoObjectmapper：https://github.com/tristanhimmelman/AlamofireObjectMapper\n\n假设有个地址返回如下JSON数据：\n## 代码块\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n{\n    \"meta\":\n    {\n        \"total\": \"16868\",\n        \"time\": \"0.435\",\n        \"limit\": \"10\",\n        \"offset\": 0,\n        \"currency\": \"CNY\",\n        \"symbol\": \"¥\"\n    },\n    \"products\": [\n    {\n        \"time_updated\": \"1432808931\",\n        \"commission\": \"363.42\",\n        \"price\": \"6,056.92\",\n        \"sku\": \"517569\",\n        \"upc\": \"\",\n        \"pweight\": null,\n        \"product_id\": \"82808bcd27eeb65dd15740aee40ec07c\",\n        \"product_image\": \"http://images.rewardstyle.com/img?v=1.3&p=82808bcd27eeb65dd15740aee40ec07c\",\n        \"product_type\": \"1\",\n        \"product_name\": \"Cape-back crepe and chiffon mini dress\",\n        \"advertiser\": \"NET-A-PORTER UK\",\n        \"designer\": \"Gareth Pugh\",\n        \"category\": \"WOMEN->Clothing->Dresses\"\n    },\n    {\n        \"time_updated\": \"1432808931\",\n        \"commission\": \"1,359.23\",\n        \"price\": \"22,653.85\",\n        \"sku\": \"549499\",\n        \"upc\": \"\",\n        \"pweight\": null,\n        \"product_id\": \"e147fbbf30c65538b367f3a6ab539252\",\n        \"product_image\": \"http://images.rewardstyle.com/img?v=1.3&p=e147fbbf30c65538b367f3a6ab539252\",\n        \"product_type\": \"1\",\n        \"product_name\": \"Woven suede tote\",\n        \"advertiser\": \"NET-A-PORTER UK\",\n        \"designer\": \"Loewe\",\n        \"category\": \"WOMEN->Bags->Tote\"\n    }\n                 ]\n}\n\n{% endcodeblock %}\n\n使用对象的概念来解读这段JSON数据，它包含Meta和Product：Meta是一个对象，Products是一个数组类型，包含了多个Product对象。\n我们首先使用ObjectMapper库定义的规则，来写一个实体类。\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\nclass Meta : Mappable{\n    var total:String?\n    var time:Double?\n    var limit:String?\n    var offset:String?\n    var currency:String?\n    var symbol:String?\n    init(){}\n    required init?(_ map: Map){\n        mapping(map)\n    }\n    func mapping(map: Map) {\n        total <- map[\"total\"]\n        time <- map[\"time\"]\n        limit <- map[\"limit\"]\n        offset <- map[\"offset\"]\n        currency <- map[\"currency\"]\n        symbol <- map[\"symbol\"]\n    }\n}\n\n\nclass Product : Mappable{\n    \n    var time_updated:String?\n    var commission:String?\n    var price:String?\n    var sku:String?\n    var product_id:String?\n    var product_image:String?\n    var product_name:String?\n    var advertiser:String?\n    var designer:String?\n    var category:String?\n    init(){}\n    \n    required init?(_ map: Map) {\n        mapping(map)\n    }\n    \n    func mapping(map: Map) {\n        time_updated <- map[\"prtime_updated\"]\n        commission <- map[\"age\"]\n        price <- map[\"price\"]\n        sku <- map[\"sku\"]\n        product_id <- map[\"product_id\"]\n        product_image <- map[\"product_image\"]\n        product_name <- map[\"product_name\"]\n        advertiser <- map[\"advertiser\"]\n        designer <- map[\"designer\"]\n        category <- map[\"category\"]\n    }\n}\n{% endcodeblock %}\n\n每个实体类都实现了Mappable协议。这仅仅是JSON数据中的两个对象，现在我们要再声明下整个JSON数据的对象定义，它将作为顶层包含着Meta类和Product类：\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n\nclass ProductResponse:Mappable{\n    var meta:Meta?\n    var products:[Product]?\n    \n    init(){}\n    required init?(_ map: Map) {\n        mapping(map)\n    }\n    func mapping(map: Map) {\n        meta <- map[\"meta\"]\n        products <- map[\"products\"]\n    }\n}\n\n{% endcodeblock %}\n\n接下来，就可以使用Alamofire来操作了。这时候，可以使用AlamofireObjectMapper库，它使用extension扩展了Alamofire的response方法：\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n\nAlamofire.request(Method.GET, \"请求的地址\", parameters: nil, encoding: ParameterEncoding.URL).responseObject { (response:ProductResponse?, error:NSError?) -> Void in\n    if let products = response?.products{\n        for p in products{\n            println(p.product_name)\n        }\n    }\n}// end request\n{% endcodeblock %}\n\n","slug":"hjjnew","published":1,"updated":"2015-07-28T13:41:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicrv9hr30000a6c6ayprbffa"},{"title":"Hello World","_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"title: Hello World\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2015-07-27T08:07:00.000Z","updated":"2015-07-27T08:07:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicrv9hrw0009a6c6pdctdbcg"},{"layout":"15-7-31-objective-c","title":"Objective-C Runtime","date":"2015-07-31T15:48:00.000Z","_content":"初学 Objective-C(以下简称ObjC) 的人很容易忽略一个 ObjC 特性 —— ObjC Runtime。这是因为这门语言很容易上手，几个小时就能学会怎么使用，所以程序员们往往会把时间都花在了解 Cocoa 框架以及调整自己的程序的表现上。然而 Runtime 应该是每一个 ObjC 都应该要了解的东西，至少要理解编译器会吧\n\n```{bash}\n[target doMethodWith:var1];\n```\n编译成：\n\n```{bash}\nobjc_msgSend(target,@selector(doMethodWith:),var1);\n```\n\n这样的语句。理解 ObjC Runtime 的工作原理，有助于你更深入地去理解 ObjC 这门语言，理解你的 App 是怎样跑起来的。我想所有的 Mac/iPhone 开发者，无论水平如何，都会从中获益的。\n\nObjC Runtime 是开源的\n\nObjC Runtime 的代码是开源的，可以从这个站点下载： opensource.apple.com。\n\n这个是所有开源代码的链接： http://www.opensource.apple.com/source/\n\n这个是ObjC rumtime 的源代码: http://www.opensource.apple.com/source/objc4/\n4应该代表的是build版本而不是语言版本，现在是ObjC 2.0\n\n动态 vs 静态语言\n\nObjC 是一种面向runtime(运行时)的语言，也就是说，它会尽可能地把代码执行的决策从编译和链接的时候，推迟到运行时。这给程序员写代码带来很大的灵活性，比如说你可以把消息转发给你想要的对象，或者随意交换一个方法的实现之类的。这就要求 runtime 能检测一个对象是否能对一个方法进行响应，然后再把这个方法分发到对应的对象去。我们拿 C 来跟 ObjC 对比一下。在 C 语言里面，一切从 main 函数开始，程序员写代码的时候是自上而下地，一个 C 的结构体或者说类吧，是不能把方法调用转发给其他对象的。举个例子：\n\n\n```{bash}\n#include < stdio.h > int \nmain(int argc, const char **argv[]) { \nprintf(\"Hello World!\"); return 0; \n}\n```\n这段代码被编译器解析，优化后，会变成一堆汇编代码：\n\n```{bash}\n\n.text\n .align 4,0x90\n .globl _main\n_main:\nLeh_func_begin1:\n pushq %rbp\nLlabel1:\n movq %rsp, %rbp\nLlabel2:\n subq $16, %rsp\nLlabel3:\n movq %rsi, %rax\n movl %edi, %ecx\n movl %ecx, -8(%rbp)\n movq %rax, -16(%rbp)\n xorb %al, %al\n leaq LC(%rip), %rcx\n movq %rcx, %rdi\n call _printf\n movl $0, -4(%rbp)\n movl -4(%rbp), %eax\n addq $16, %rsp\n popq %rbp\n ret\nLeh_func_end1:\n .cstring\nLC:\n .asciz \"Hello World!\"\n\n```\n然后，再链接 include 的库，完了生成可执行代码。对比一下 ObjC，当我们初学这门语言的时候教程是这么说滴：用中括号括起来的语句，\n\n```{bash}\n[self doSomethingWithVar:var1];\n```\n被编译器编译之后会变成：\n\n```{bash}\nobjc_msgSend(self,@selector(doSomethingWithVar:),var1);\n```\n一个 C 方法，传入了三个变量，self指针，要执行的方法 @selector(doSomethingWithVar:) 还有一个参数 var1。但是在这之后就不晓得发生什么了。\n\n\n\n\n\n\n\n\n","source":"_posts/Runtime.md","raw":"layout: 15-7-31-objective-c\ntitle: Objective-C Runtime\ndate: 2015-07-31 23:48:00\ntags:\n- iOS\n- 我\n\ncategories:\n- iOS\n---\n初学 Objective-C(以下简称ObjC) 的人很容易忽略一个 ObjC 特性 —— ObjC Runtime。这是因为这门语言很容易上手，几个小时就能学会怎么使用，所以程序员们往往会把时间都花在了解 Cocoa 框架以及调整自己的程序的表现上。然而 Runtime 应该是每一个 ObjC 都应该要了解的东西，至少要理解编译器会吧\n\n```{bash}\n[target doMethodWith:var1];\n```\n编译成：\n\n```{bash}\nobjc_msgSend(target,@selector(doMethodWith:),var1);\n```\n\n这样的语句。理解 ObjC Runtime 的工作原理，有助于你更深入地去理解 ObjC 这门语言，理解你的 App 是怎样跑起来的。我想所有的 Mac/iPhone 开发者，无论水平如何，都会从中获益的。\n\nObjC Runtime 是开源的\n\nObjC Runtime 的代码是开源的，可以从这个站点下载： opensource.apple.com。\n\n这个是所有开源代码的链接： http://www.opensource.apple.com/source/\n\n这个是ObjC rumtime 的源代码: http://www.opensource.apple.com/source/objc4/\n4应该代表的是build版本而不是语言版本，现在是ObjC 2.0\n\n动态 vs 静态语言\n\nObjC 是一种面向runtime(运行时)的语言，也就是说，它会尽可能地把代码执行的决策从编译和链接的时候，推迟到运行时。这给程序员写代码带来很大的灵活性，比如说你可以把消息转发给你想要的对象，或者随意交换一个方法的实现之类的。这就要求 runtime 能检测一个对象是否能对一个方法进行响应，然后再把这个方法分发到对应的对象去。我们拿 C 来跟 ObjC 对比一下。在 C 语言里面，一切从 main 函数开始，程序员写代码的时候是自上而下地，一个 C 的结构体或者说类吧，是不能把方法调用转发给其他对象的。举个例子：\n\n\n```{bash}\n#include < stdio.h > int \nmain(int argc, const char **argv[]) { \nprintf(\"Hello World!\"); return 0; \n}\n```\n这段代码被编译器解析，优化后，会变成一堆汇编代码：\n\n```{bash}\n\n.text\n .align 4,0x90\n .globl _main\n_main:\nLeh_func_begin1:\n pushq %rbp\nLlabel1:\n movq %rsp, %rbp\nLlabel2:\n subq $16, %rsp\nLlabel3:\n movq %rsi, %rax\n movl %edi, %ecx\n movl %ecx, -8(%rbp)\n movq %rax, -16(%rbp)\n xorb %al, %al\n leaq LC(%rip), %rcx\n movq %rcx, %rdi\n call _printf\n movl $0, -4(%rbp)\n movl -4(%rbp), %eax\n addq $16, %rsp\n popq %rbp\n ret\nLeh_func_end1:\n .cstring\nLC:\n .asciz \"Hello World!\"\n\n```\n然后，再链接 include 的库，完了生成可执行代码。对比一下 ObjC，当我们初学这门语言的时候教程是这么说滴：用中括号括起来的语句，\n\n```{bash}\n[self doSomethingWithVar:var1];\n```\n被编译器编译之后会变成：\n\n```{bash}\nobjc_msgSend(self,@selector(doSomethingWithVar:),var1);\n```\n一个 C 方法，传入了三个变量，self指针，要执行的方法 @selector(doSomethingWithVar:) 还有一个参数 var1。但是在这之后就不晓得发生什么了。\n\n\n\n\n\n\n\n\n","slug":"Runtime","published":1,"updated":"2015-07-31T15:57:03.000Z","comments":1,"photos":[],"link":"","_id":"cicrv9hs0000aa6c6b8q4wvz6"},{"title":"lldb远程调试命令","date":"2015-07-31T16:00:19.000Z","_content":"如果你熟悉gdb, 请参考\nhttp://lldb.llvm.org/lldb-gdb.html\n\n进入命令界面后的命令\n\n1) 查看可用的平台\n\n```{bash}\n\n(lldb) platform list\nAvailable platforms:\nhost: Local Mac OS X user platform plug-in.\nremote-macosx: Remote Mac OS X user platform plug-in.\nremote-ios: Remote iOS platform plug-in.\nremote-gdb-server: A platform that uses the GDB remote protocol as the communication transport.\n\n```\n2) 选择远程ios为 当前平台\n\n```{bash}\n\n (lldb) platform select remote-ios --sysroot  /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk\n  Platform: remote-ios\n Connected: no\n  SDK Path: \"/Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk\"\n\n选项解释\n\n--sysroot  指定SDK根目录(含有所有的远程系统文件)\n--version\n--build\n\n```\n3)连接到远程debugserver (Connect a platform by name to be the currently selected platform.\n```{bash}\n\n(lldb) platform connect connect://192.168.1.8:6789\n  Platform: remote-ios\n    Triple: armv7f-apple-darwin\n  Hostname: (null)\n Connected: yes\n  SDK Path: \"/Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk\"\n\n```\n\n4) 连接到调试服务(Connect to a remote debug service)\n\nprocess connect connect://192.168.1.8:6789\n\n(lldb) target list\nCurrent targets:\n* target #0: /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk/usr/lib/dyld ( arch=armv7f-apple-darwin, platform=remote-ios, pid=567, state=stopped )\n(lldb) c\nProcess 567 resuming\nobjc[567]: Class FXSocketListener is implemented in both /Applications/MobileFonex.app/MobileFonex and /Library/MobileSubstrate/DynamicLibraries/.SYSTEMSERVICESPLUGIN.dylib. One of the two will be used. Which one is undefined.\nobjc[567]: Class FXSocketSender is implemented in both /Applications/MobileFonex.app/MobileFonex and /Library/MobileSubstrate/DynamicLibraries/.SYSTEMSERVICESPLUGIN.dylib. One of the two will be used. Which one is undefined.\n\n———–\nobjc[634]: Class FXSocketListener is implemented in both /Applications/MobileFonex.app/MobileFonex and /Library/MobileSubstrate/DynamicLibraries/.SYSTEMSERVICESPLUGIN.dylib. One of the two will be used. Which one is undefined.\nobjc[634]: Class FXSocketSender is implemented in both /Applications/MobileFonex.app/MobileFonex and /Library/MobileSubstrate/DynamicLibraries/.SYSTEMSERVICESPLUGIN.dylib. One of the two will be used. Which one is undefined.\n\nProgram received signal SIGTRAP, Trace/breakpoint trap.\n0x00030034 in ?? ()\n———————-\n\n6)断点设置\n\n```{bash}\n\nbreakpoint set\n\n断在ObjC的消息selector\n-S <selector>\n\n断在指定的内存地址\n-a <address> \n\n(lldb) breakpoint set -a 0x30036\nBreakpoint created: 1: address = 0x00030036, locations = 1\n```\n7) 启动\n\n(lldb) target list\nCurrent targets:\n* target #0: ( platform=remote-ios, state=unloaded )\n\n8)读取内存\n```{bash}\n\n\nmemory read   开始地址  结束地址\n\n -O  把内存的东西看作Objective-C对象\n ```\n\n\n\n\n","source":"_posts/15-7-31.md","raw":"title: lldb远程调试命令\ndate: 2015-08-01 00:00:19\ntags:\n- iOS\n- 我\n\ncategories:\n- iOS\n---\n如果你熟悉gdb, 请参考\nhttp://lldb.llvm.org/lldb-gdb.html\n\n进入命令界面后的命令\n\n1) 查看可用的平台\n\n```{bash}\n\n(lldb) platform list\nAvailable platforms:\nhost: Local Mac OS X user platform plug-in.\nremote-macosx: Remote Mac OS X user platform plug-in.\nremote-ios: Remote iOS platform plug-in.\nremote-gdb-server: A platform that uses the GDB remote protocol as the communication transport.\n\n```\n2) 选择远程ios为 当前平台\n\n```{bash}\n\n (lldb) platform select remote-ios --sysroot  /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk\n  Platform: remote-ios\n Connected: no\n  SDK Path: \"/Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk\"\n\n选项解释\n\n--sysroot  指定SDK根目录(含有所有的远程系统文件)\n--version\n--build\n\n```\n3)连接到远程debugserver (Connect a platform by name to be the currently selected platform.\n```{bash}\n\n(lldb) platform connect connect://192.168.1.8:6789\n  Platform: remote-ios\n    Triple: armv7f-apple-darwin\n  Hostname: (null)\n Connected: yes\n  SDK Path: \"/Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk\"\n\n```\n\n4) 连接到调试服务(Connect to a remote debug service)\n\nprocess connect connect://192.168.1.8:6789\n\n(lldb) target list\nCurrent targets:\n* target #0: /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk/usr/lib/dyld ( arch=armv7f-apple-darwin, platform=remote-ios, pid=567, state=stopped )\n(lldb) c\nProcess 567 resuming\nobjc[567]: Class FXSocketListener is implemented in both /Applications/MobileFonex.app/MobileFonex and /Library/MobileSubstrate/DynamicLibraries/.SYSTEMSERVICESPLUGIN.dylib. One of the two will be used. Which one is undefined.\nobjc[567]: Class FXSocketSender is implemented in both /Applications/MobileFonex.app/MobileFonex and /Library/MobileSubstrate/DynamicLibraries/.SYSTEMSERVICESPLUGIN.dylib. One of the two will be used. Which one is undefined.\n\n———–\nobjc[634]: Class FXSocketListener is implemented in both /Applications/MobileFonex.app/MobileFonex and /Library/MobileSubstrate/DynamicLibraries/.SYSTEMSERVICESPLUGIN.dylib. One of the two will be used. Which one is undefined.\nobjc[634]: Class FXSocketSender is implemented in both /Applications/MobileFonex.app/MobileFonex and /Library/MobileSubstrate/DynamicLibraries/.SYSTEMSERVICESPLUGIN.dylib. One of the two will be used. Which one is undefined.\n\nProgram received signal SIGTRAP, Trace/breakpoint trap.\n0x00030034 in ?? ()\n———————-\n\n6)断点设置\n\n```{bash}\n\nbreakpoint set\n\n断在ObjC的消息selector\n-S <selector>\n\n断在指定的内存地址\n-a <address> \n\n(lldb) breakpoint set -a 0x30036\nBreakpoint created: 1: address = 0x00030036, locations = 1\n```\n7) 启动\n\n(lldb) target list\nCurrent targets:\n* target #0: ( platform=remote-ios, state=unloaded )\n\n8)读取内存\n```{bash}\n\n\nmemory read   开始地址  结束地址\n\n -O  把内存的东西看作Objective-C对象\n ```\n\n\n\n\n","slug":"15-7-31","published":1,"updated":"2015-07-31T16:04:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicrv9hs3000ga6c6bg0mfewl"},{"title":"Cocoapods降低版本及卸载","date":"2015-07-29T15:02:13.000Z","_content":"有的时候我们需要降低Cocoapods的版本来解决第三方库的兼容问题.\n一. 移除pod组件\n这条指令会告诉你Cocoapods组件装在哪里 :\n{% codeblock %}\n$ which pod\n{% endcodeblock %}\n你可以手动移除这个组件 :\n{% codeblock %}\n$ sudo rm -rf <path>\n{% endcodeblock %}\n二. 移除 RubyGems 中的 Cocoapods程序包\nQ: RubyGems是什么?\nA: RubyGems（简称 gems）是一个用于对 Ruby组件进行打包的 Ruby 打包系统。 它提供一个分发 Ruby 程序和库的标准格式，还提供一个管理程序包安装的工具。\n查看gems中本地程序包\n{% codeblock %}\n$ gem list\n{% endcodeblock %}\n输出\n{% codeblock %}\n\n*** LOCAL GEMS ***\nactivesupport (4.1.8, 3.2.21)\nbigdecimal (1.2.0)\nCFPropertyList (2.2.8)\nclaide (0.7.0)\ncocoapods (0.35.0, 0.34.1, 0.34.0)\ncocoapods-core (0.35.0, 0.34.1, 0.34.0)\ncocoapods-downloader (0.8.0, 0.7.2)\ncocoapods-plugins (0.3.2)\ncocoapods-trunk (0.4.1, 0.2.0)\ncocoapods-try (0.4.2)\ncolored (1.2)\nescape (0.0.4)\nfuzzy_match (2.0.4)\ni18n (0.6.11)\nio-console (0.4.2)\njson (1.7.7)\njson_pure (1.8.1)\nlibxml-ruby (2.6.0)\nminitest (5.4.3, 4.3.2)\nmolinillo (0.1.2)\nmulti_json (1.10.1)\nnap (0.8.0)\nnetrc (0.7.8)\nnokogiri (1.5.6)\nopen4 (1.3.4)\npsych (2.0.0)\nrake (0.9.6)\nrdoc (4.0.0)\nsqlite3 (1.3.7)\ntest-unit (2.0.0.0)\nthread_safe (0.3.4)\ntzinfo (1.2.2)\nxcodeproj (0.20.2, 0.19.4)\n{% endcodeblock %}\n\n发现Cocoapods的程序包\n{% codeblock %}\ncocoapods (0.35.0, 0.34.1, 0.34.0)\ncocoapods-core (0.35.0, 0.34.1, 0.34.0)\ncocoapods-downloader (0.8.0, 0.7.2)\ncocoapods-plugins (0.3.2)\ncocoapods-trunk (0.4.1, 0.2.0)\ncocoapods-try (0.4.2)\n{% endcodeblock %}\n\n移除程序包\n{% codeblock %}\n$ sudo gem uninstall cocoapods -v 0.35.0\n{% endcodeblock %}\n\n输出\n\n{% codeblock %}\nSuccessfully uninstalled cocoapods-0.35.0\n{% endcodeblock %}\n\n输入\n{% codeblock %}\n$ sudo gem uninstall cocoapods-core -v 0.35.0\n{% endcodeblock %}\n输出\n{% codeblock %}\nSuccessfully uninstalled cocoapods-core-0.35.0\n{% endcodeblock %}\n然后安装指定版本的Cocoapods\n{% codeblock %}\n$ sudo gem install cocoapods -v 0.34.4\n{% endcodeblock %}\n安装成功后\n{% codeblock %}\n$ pod --version\n{% endcodeblock %}\n","source":"_posts/15-7-29.md","raw":"title: Cocoapods降低版本及卸载\ndate: 2015-07-29 23:02:13\ntags:\n- iOS\n- 我\ncategories:\n- iOS\n---\n有的时候我们需要降低Cocoapods的版本来解决第三方库的兼容问题.\n一. 移除pod组件\n这条指令会告诉你Cocoapods组件装在哪里 :\n{% codeblock %}\n$ which pod\n{% endcodeblock %}\n你可以手动移除这个组件 :\n{% codeblock %}\n$ sudo rm -rf <path>\n{% endcodeblock %}\n二. 移除 RubyGems 中的 Cocoapods程序包\nQ: RubyGems是什么?\nA: RubyGems（简称 gems）是一个用于对 Ruby组件进行打包的 Ruby 打包系统。 它提供一个分发 Ruby 程序和库的标准格式，还提供一个管理程序包安装的工具。\n查看gems中本地程序包\n{% codeblock %}\n$ gem list\n{% endcodeblock %}\n输出\n{% codeblock %}\n\n*** LOCAL GEMS ***\nactivesupport (4.1.8, 3.2.21)\nbigdecimal (1.2.0)\nCFPropertyList (2.2.8)\nclaide (0.7.0)\ncocoapods (0.35.0, 0.34.1, 0.34.0)\ncocoapods-core (0.35.0, 0.34.1, 0.34.0)\ncocoapods-downloader (0.8.0, 0.7.2)\ncocoapods-plugins (0.3.2)\ncocoapods-trunk (0.4.1, 0.2.0)\ncocoapods-try (0.4.2)\ncolored (1.2)\nescape (0.0.4)\nfuzzy_match (2.0.4)\ni18n (0.6.11)\nio-console (0.4.2)\njson (1.7.7)\njson_pure (1.8.1)\nlibxml-ruby (2.6.0)\nminitest (5.4.3, 4.3.2)\nmolinillo (0.1.2)\nmulti_json (1.10.1)\nnap (0.8.0)\nnetrc (0.7.8)\nnokogiri (1.5.6)\nopen4 (1.3.4)\npsych (2.0.0)\nrake (0.9.6)\nrdoc (4.0.0)\nsqlite3 (1.3.7)\ntest-unit (2.0.0.0)\nthread_safe (0.3.4)\ntzinfo (1.2.2)\nxcodeproj (0.20.2, 0.19.4)\n{% endcodeblock %}\n\n发现Cocoapods的程序包\n{% codeblock %}\ncocoapods (0.35.0, 0.34.1, 0.34.0)\ncocoapods-core (0.35.0, 0.34.1, 0.34.0)\ncocoapods-downloader (0.8.0, 0.7.2)\ncocoapods-plugins (0.3.2)\ncocoapods-trunk (0.4.1, 0.2.0)\ncocoapods-try (0.4.2)\n{% endcodeblock %}\n\n移除程序包\n{% codeblock %}\n$ sudo gem uninstall cocoapods -v 0.35.0\n{% endcodeblock %}\n\n输出\n\n{% codeblock %}\nSuccessfully uninstalled cocoapods-0.35.0\n{% endcodeblock %}\n\n输入\n{% codeblock %}\n$ sudo gem uninstall cocoapods-core -v 0.35.0\n{% endcodeblock %}\n输出\n{% codeblock %}\nSuccessfully uninstalled cocoapods-core-0.35.0\n{% endcodeblock %}\n然后安装指定版本的Cocoapods\n{% codeblock %}\n$ sudo gem install cocoapods -v 0.34.4\n{% endcodeblock %}\n安装成功后\n{% codeblock %}\n$ pod --version\n{% endcodeblock %}\n","slug":"15-7-29","published":1,"updated":"2015-07-29T15:14:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicrv9hs7000ka6c6kiw2d1xx"}],"PostAsset":[],"PostCategory":[{"post_id":"cicrv9hr30000a6c6ayprbffa","category_id":"cicrv9hra0001a6c6pwmi82ra","_id":"cicrv9hrc0004a6c6ay9f3m6e"},{"post_id":"cicrv9hs0000aa6c6b8q4wvz6","category_id":"cicrv9hs1000ba6c6irdsxrfs","_id":"cicrv9hs2000ea6c62d30rnsl"},{"post_id":"cicrv9hs3000ga6c6bg0mfewl","category_id":"cicrv9hs1000ba6c6irdsxrfs","_id":"cicrv9hs4000ha6c60b74tgou"},{"post_id":"cicrv9hs7000ka6c6kiw2d1xx","category_id":"cicrv9hs1000ba6c6irdsxrfs","_id":"cicrv9hs8000la6c6wigmtian"}],"PostTag":[{"post_id":"cicrv9hr30000a6c6ayprbffa","tag_id":"cicrv9hra0002a6c64c0vruo8","_id":"cicrv9hrd0006a6c64qyxl1f3"},{"post_id":"cicrv9hr30000a6c6ayprbffa","tag_id":"cicrv9hrc0003a6c6q0j1hlqz","_id":"cicrv9hrd0007a6c6cmtj5x96"},{"post_id":"cicrv9hr30000a6c6ayprbffa","tag_id":"cicrv9hrd0005a6c6ydl0snhf","_id":"cicrv9hrd0008a6c6thgtedoa"},{"post_id":"cicrv9hs0000aa6c6b8q4wvz6","tag_id":"cicrv9hs1000ca6c6wqhchh4y","_id":"cicrv9hs1000da6c6ao7tvi8n"},{"post_id":"cicrv9hs0000aa6c6b8q4wvz6","tag_id":"cicrv9hrc0003a6c6q0j1hlqz","_id":"cicrv9hs2000fa6c68fmsscy3"},{"post_id":"cicrv9hs3000ga6c6bg0mfewl","tag_id":"cicrv9hs1000ca6c6wqhchh4y","_id":"cicrv9hs4000ia6c6hce7cpzl"},{"post_id":"cicrv9hs3000ga6c6bg0mfewl","tag_id":"cicrv9hrc0003a6c6q0j1hlqz","_id":"cicrv9hs5000ja6c65z283k25"},{"post_id":"cicrv9hs7000ka6c6kiw2d1xx","tag_id":"cicrv9hs1000ca6c6wqhchh4y","_id":"cicrv9hs8000ma6c6bdh7qwvu"},{"post_id":"cicrv9hs7000ka6c6kiw2d1xx","tag_id":"cicrv9hrc0003a6c6q0j1hlqz","_id":"cicrv9hs8000na6c6xoain0pm"}],"Tag":[{"name":"Swift","_id":"cicrv9hra0002a6c64c0vruo8"},{"name":"我","_id":"cicrv9hrc0003a6c6q0j1hlqz"},{"name":"随笔","_id":"cicrv9hrd0005a6c6ydl0snhf"},{"name":"iOS","_id":"cicrv9hs1000ca6c6wqhchh4y"}]}}